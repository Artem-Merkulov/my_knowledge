https://www.youtube.com/watch?v=JkULnE1OrfM

Парадигма вычислений Map-Reduce. (Концепция перемещения кода к данным.)

Map-Reduce предполагает хранение данных распределённым образом на узлах 
выделенного кластера и запуск расчёта на тех же узлах. При этом количество 
пересылок данных по сети максимально сокращается. То есть код перемещается 
к данным.


- Параллельная модель данных, предназначенная для использования на кластерах.


Концепция:

- Автоматическое распараллеливание программ и распределение их по кластеру.
- Мониторинг состояния кластера (Отказоустойчивость).
- Hadoop написан на Java
- Можно работать на любом языке сценариев, с использованием
  Hadoop Streaming API.
- Программист может сосредоточиться на написании бизнес-логики в функциях
  Map и Reduce.


Принцип работы Map-Reduce:

Input -> Map -> Shuffle&Sort -> Reduce -> Output

1. Считывание исходных данных из распределённой файловой системы.
2. Запуск пропорционального данным количества задач отображением Map.
3. Map задачи, в результате своей работы формируют пары "Ключ - Значение".
   Которые переходят на стадию обмена - Shuffle.
3. Shuffle - пересылка данных по сети, в результате чего данные с одинаковыми 
   ключами оказываются на одинаковых узлах кластера (на одних и тех же задачах 
   свёртки Reduce). 
4. Операции Reduce - выстраивают окончательные агрегаты над парами "Ключ - Значение".
5. Запись агрегатов в файлы с результатом.


- Задачи Map:
  - Обработка блоков входного ключа
  - Произведение пар ключ-значение

Задачи Reduce:
  - Отбор пар ключ-значение
  - Сортировка по ключам
  - Объединение
  - Вывод окончательного результата   
    


Плюсы использования Map-Reduce:

- Масштабируемость для больших объёмов данных
  (На одном узле 100ТБ сканируется 23 дня при 50Мб/с
   На кластере в 1000 узлов сканировние происходит за 33 минуты.)
- Экономическая эффективность 
  (- Использование узлов потребительского класса
   - Стандартное оборудование для сетей.
   - Автоматическое восстановление после сбоя.
   - Легко использовать.)


Минусы использования Map-Reduce:

  - Дешевое оборудование часто даёт сбои. 
    (Решение: Встренная защита от сбоев.)
  - Стандартное межсоединение - низкая пропускная способность. 
    (Решение: Перемещение вычислений в данные.)
  - Программирование распределённых систем - сложная задача. 
    (Предоставление программисту вычислительной среды, в которой он будет 
     использовать только функции Map и Reduce.)


Word count.

Аналог "Hello World в мире распределённых вычислений".
Программа, которая рассчитывает "Сколько раз каждое слово встретилось в тексте":

```python

def mapper(line):
    foreach word in line.split():
        output(word, 1)

def reducer(key, values):
    output(key, sum(values))

```

1. Функция Map принимает на вход строку текстового файла.
2. Функция Map разделяет строку по пробелам. 
3. Для каждого слова из получившигося массива, выталкивает на фазу Reduce
   само слова в качестве ключа и единицу в качестве значения.
4. Функцию Reduce framework вызывает, передавая ей в качестве аргументов 
   слово и список единиц.
5. Суммируя этот список и выталкивая на выход Reduce слово и агрегат, 
   мы можем узнать сколько раз каждое слово встретилось в строке.

Наибоее популярной реализацией Map-Reduce стал, разработанный в 2007-м году 
framework Hadoop.