https://thisisdata.ru/blog/uchimsya-primenyat-okonnyye-funktsii/

Синтаксис.
```
SELECT
-- Название функции (столбец для вычислений).
OVER (
      PARTITION BY -- столбец для группировки
      ORDER BY -- столбец для сортировки
      ROWS или RANGE -- выражение для ограничения строк в пределах группы
      )
```

Виды функций
Оконные функции можно подразделить на следующие группы:

Агрегатные функции;
Ранжирующие функции;
Функции смещения;
Аналитические функции.


Агрегатные функции
Агрегатные функции – это функции, которые выполняют на наборе данных арифметические 
вычисления и возвращают итоговое значение.

SUM – возвращает сумму значений в столбце;
COUNT — вычисляет количество значений в столбце (значения NULL не учитываются);
AVG — определяет среднее значение в столбце;
MAX — определяет максимальное значение в столбце;
MIN — определяет минимальное значение в столбце.


Ранжирующие функции
Ранжирующие функции – это функции, которые ранжируют значение для каждой строки в окне. 
Например, их можно использовать для того, чтобы присвоить порядковый номер строке или составить 
рейтинг.

ROW_NUMBER – функция возвращает номер строки и используется для нумерации;
RANK — функция возвращает ранг каждой строки. В данном случае значения уже анализируются и, в 
случае нахождения одинаковых, возвращает одинаковый ранг с пропуском следующего значения;
DENSE_RANK — функция возвращает ранг каждой строки. Но в отличие от функции RANK, она для 
одинаковых значений возвращает ранг, не пропуская следующий;
NTILE – это функция, которая позволяет определить к какой группе относится текущая строка. 
Количество групп задается в скобках.


Функции смещения
Функции смещения – это функции, которые позволяют перемещаться и обращаться к разным строкам 
в окне, относительно текущей строки, а также обращаться к значениям в начале или в конце окна.

LAG или LEAD – функция LAG обращается к данным из предыдущей строки окна, а LEAD к данным из 
следующей строки. Функцию можно использовать для того, чтобы сравнивать текущее значение 
строки с предыдущим или следующим. Имеет три параметра: столбец, значение которого необходимо 
вернуть, количество строк для смещения (по умолчанию 1), значение, которое необходимо вернуть 
если после смещения возвращается значение NULL;
FIRST_VALUE или LAST_VALUE — с помощью функции можно получить первое и последнее значение в окне. 
В качестве параметра принимает столбец, значение которого необходимо вернуть.


Аналитические функции
Аналитические функции — это функции которые возвращают информацию о распределении данных и 
используются для статистического анализа.

CUME_DIST — вычисляет интегральное распределение (относительное положение) значений в окне;
PERCENT_RANK — вычисляет относительный ранг строки в окне;
PERCENTILE_CONT — вычисляет процентиль на основе постоянного распределения значения столбца. 
В качестве параметра принимает процентиль, который необходимо вычислить (в этой статье я 
рассказываю как посчитать медиану, благодаря этой функции);
PERCENTILE_DISC — вычисляет определенный процентиль для отсортированных значений в наборе 
данных. В качестве параметра принимает процентиль, который необходимо вычислить.

Важно! У функций PERCENTILE_CONT и PERCENTILE_DISC, столбец, по которому будет происходить 
сортировка, указывается с помощью ключевого слова WITHIN GROUP.


Практика:
```
CREATE TABLE test_schema.analytics_table(
	dt DATE,
	medium VARCHAR,
	conversions INT);

INSERT INTO test_schema.analytics_table(
	dt,
	medium,
	conversions)
VALUES
	('10-05-2020', 'сра', 1),
	('10-05-2020', 'cpc', 2),
	('10-05-2020', 'organic', 1),
	('11-05-2020', 'сра', 1),
	('11-05-2020', 'cpc', 3),
	('11-05-2020', 'organic', 2),
	('11-05-2020', 'direct', 1),
	('12-05-2020', 'cpc', 1),
	('12-05-2020', 'organic', 2);

SELECT * FROM test_schema.analytics_table;

-- Агрегатные функции.
SELECT 
  dt
, Medium
, Conversions
, SUM(Conversions) OVER(PARTITION BY dt) AS Sum
, COUNT(Conversions) OVER(PARTITION BY dt) AS Count
, AVG(Conversions) OVER(PARTITION BY dt) AS Avg
, MAX(Conversions) OVER(PARTITION BY dt) AS Max
, MIN(Conversions) OVER(PARTITION BY dt) AS Min
FROM test_schema.analytics_table;

-- Вывод.
dt        |medium |conversions|sum|count|avg               |max|min|
----------+-------+-----------+---+-----+------------------+---+---+
2020-05-10|сра    |          1|  4|    3|1.3333333333333333|  2|  1|
2020-05-10|cpc    |          2|  4|    3|1.3333333333333333|  2|  1|
2020-05-10|organic|          1|  4|    3|1.3333333333333333|  2|  1|
2020-05-11|сра    |          1|  7|    4|1.7500000000000000|  3|  1|
2020-05-11|cpc    |          3|  7|    4|1.7500000000000000|  3|  1|
2020-05-11|organic|          2|  7|    4|1.7500000000000000|  3|  1|
2020-05-11|direct |          1|  7|    4|1.7500000000000000|  3|  1|
2020-05-12|cpc    |          1|  3|    2|1.5000000000000000|  2|  1|
2020-05-12|organic|          2|  3|    2|1.5000000000000000|  2|  1|

-- ROW_NUMBER().
SELECT 
	dt,
	medium,
	conversions,
	ROW_NUMBER() OVER(ORDER BY dt)
FROM test_schema.analytics_table at2;

-- Вывод.
dt        |medium |conversions|row_number|
----------+-------+-----------+----------+
2020-05-10|сра    |          1|         1|
2020-05-10|cpc    |          2|         2|
2020-05-10|organic|          1|         3|
2020-05-11|сра    |          1|         4|
2020-05-11|cpc    |          3|         5|
2020-05-11|organic|          2|         6|
2020-05-11|direct |          1|         7|
2020-05-12|cpc    |          1|         8|
2020-05-12|organic|          2|         9|

-- ROW_NUMBER() PARTITION BY dt.
SELECT 
	dt,
	medium,
	conversions,
	ROW_NUMBER() OVER(PARTITION BY dt ORDER BY dt)
FROM test_schema.analytics_table at2;

-- Вывод.
dt        |medium |conversions|row_number|
----------+-------+-----------+----------+
2020-05-10|сра    |          1|         1|
2020-05-10|cpc    |          2|         2|
2020-05-10|organic|          1|         3|
2020-05-11|сра    |          1|         1|
2020-05-11|cpc    |          3|         2|
2020-05-11|organic|          2|         3|
2020-05-11|direct |          1|         4|
2020-05-12|cpc    |          1|         1|
2020-05-12|organic|          2|         2|

-- Ранжирующие функции.
SELECT 
  dt
, medium
, conversions
, ROW_NUMBER() OVER(PARTITION BY dt ORDER BY conversions) AS Row_number
, RANK() OVER(PARTITION BY dt ORDER BY conversions) AS Rank 
, DENSE_RANK() OVER(PARTITION BY dt ORDER BY conversions) AS Dense_Rank
, NTILE(3) OVER(PARTITION BY dt ORDER BY conversions) AS Ntile
FROM test_schema.analytics_table;

-- Вывод.
dt        |medium |conversions|row_number|rank|dense_rank|ntile|
----------+-------+-----------+----------+----+----------+-----+
2020-05-10|organic|          1|         1|   1|         1|    1|
2020-05-10|сра    |          1|         2|   1|         1|    2|
2020-05-10|cpc    |          2|         3|   3|         2|    3|
2020-05-11|direct |          1|         1|   1|         1|    1|
2020-05-11|сра    |          1|         2|   1|         1|    1|
2020-05-11|organic|          2|         3|   3|         2|    2|
2020-05-11|cpc    |          3|         4|   4|         3|    3|
2020-05-12|cpc    |          1|         1|   1|         1|    1|
2020-05-12|organic|          2|         2|   2|         2|    2|

-- Функции смещения.
SELECT 
  dt
, medium
, conversions
, LAG(Conversions) OVER(PARTITION BY dt ORDER BY dt) AS Lag 
, LEAD(Conversions) OVER(PARTITION BY dt ORDER BY dt) AS Lead 
, FIRST_VALUE(Conversions) OVER(PARTITION BY dt ORDER BY dt) AS First_Value 
, LAST_VALUE(Conversions) OVER(PARTITION BY dt ORDER BY dt) AS Last_Value
FROM test_schema.analytics_table;

-- Вывод.
dt        |medium |conversions|lag|lead|first_value|last_value|
----------+-------+-----------+---+----+-----------+----------+
2020-05-10|сра    |          1|   |   2|          1|         1|
2020-05-10|cpc    |          2|  1|   1|          1|         1|
2020-05-10|organic|          1|  2|    |          1|         1|
2020-05-11|сра    |          1|   |   3|          1|         1|
2020-05-11|cpc    |          3|  1|   2|          1|         1|
2020-05-11|organic|          2|  3|   1|          1|         1|
2020-05-11|direct |          1|  2|    |          1|         1|
2020-05-12|cpc    |          1|   |   2|          1|         2|
2020-05-12|organic|          2|  1|    |          1|         2|
```