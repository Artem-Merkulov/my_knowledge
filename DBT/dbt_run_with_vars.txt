В `dbt` вы можете передать значения переменных, таких как `load_id`, в 
командной строке, используя параметр `--vars`. Значения, переданные через 
`--vars`, будут доступны в вашем проекте, и вы сможете использовать их в 
моделях и макросах.

Вот как это сделать:

1. **Передача переменной через командную строку**:

   При выполнении команды `dbt run`, вы можете передать значение переменной 
   `load_id`, используя следующий синтаксис:

   ```bash
   dbt run --vars '{load_id: "ваше_значение"}'
   ```

   Например, если ваше значение `load_id` равно `123`, команда будет 
   выглядеть так:

   ```bash
   dbt run --vars '{load_id: "123"}'
   ```

2. **Использование переменной в проекте**:

   После того как вы передали переменную, вы можете использовать её в своих 
   моделях или макросах. Например, чтобы получить доступ к значению `load_id`, 
   вы можете использовать следующий код в модели:

   ```sql
   select '{{ var("load_id") }}' as load_id
   ```

3. **Настройка в `dbt_project.yml`**:

   В `dbt_project.yml` вы не можете напрямую передавать значения переменных, 
   поскольку этот файл используется для конфигурации проекта. Вместо этого 
   вы можете использовать значения, переданные через `--vars`, в ваших 
   SQL-запросах и макросах.

   dbt run --vars '{load_id: '2004-08-31', source: '!1С'}' - Для двух переменных.

   --vars YAML                    Supply variables to the project. This
                                  argument overrides variables defined in your
                                  dbt_project.yml file. This argument should
                                  be a YAML string, eg. '{my_variable:
                                  my_value}'

dbt run --vars '{load_dt: 2004-08-31, load_src: 1C}' - Точно сработало!